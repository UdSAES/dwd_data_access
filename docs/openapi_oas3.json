{
  "openapi": "3.0.3",
  "info": {
    "title": "dwd-data-access",
    "version": "2.0.0",
    "license": {
      "name": "MIT License",
      "url": "https://spdx.org/licenses/MIT.html"
    }
  },
  "paths": {
    "/weather-stations": {
      "get": {
        "tags": [ "Weather Stations" ],
        "summary": "Show list of weather stations that match criteria",
        "description": "Show the list of available weather stations, possibly limited to those in a specified radius around the given coordinates. If no location is given, the radius is ignored and the full list of stations is returned. In case there is no weather station in the radius of the specified location, an empty list will be returned with status code 200, indicating success. The list is sorted by distance (nearest first) if coordinates are supplied and alphabetically otherwise.",
        "operationId": "getFilteredListOfStations",
        "parameters": [ {
            "name": "in-vicinity-of",
            "in": "query",
            "description": "The coordinates at which to search for stations in the vicinity",
            "schema": {
              "$ref": "#/components/schemas/LatitudeLongitudePair"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "The search radius for the given coordinates in kilometres",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of stations to return (`0` means 'no limit')",
            "schema": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "default": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested list of weather stations (may be empty)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfWeatherStationsAsJSON"
                },
                "example": [ {
                  "name": "UFS Deutsche Bucht",
                  "url": "http://example.com/weather-stations/10007"
                } ]
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/ListOfWeatherStationsAsCSV"
                },
                "example": "name,url,distance\n\"UFS Deutsche Bucht\",\"http://example.com/weather-stations/10007\",\n"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/SchemaValidationFailed"
          }
        }
      }
    },
    "/weather-stations/{stationId}": {
      "get": {
        "tags": [ "Weather Stations" ],
        "summary": "Show details about a single weather station",
        "operationId": "getStation",
        "parameters": [
          { "$ref": "#/components/parameters/StationId" }
        ],
        "responses": {
          "200": {
            "description": "A representation of a single weather station",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WeatherStationAsJSON"
                }
              },
              "text/csv": {
                "schema": {
                  "$ref": "#/components/schemas/WeatherStationAsCSV"
                },
                "example": "stationId,name,latitude,longitude,elevation\n\"10982\",\"Chieming\",47.884339,12.540379,551.2"
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/SchemaValidationFailed"
          }
        }
      }
    },
    "/weather-stations/{stationId}/measured-values": {
      "get": {
        "tags": [ "Weather Stations" ],
        "summary": "Show measurement values taken at a specific weather station",
        "operationId": "getMeasuredValues",
        "parameters": [
          { "$ref": "#/components/parameters/StationId" },
          { "$ref": "#/components/parameters/Quantities" },
          { "$ref": "#/components/parameters/From" },
          { "$ref": "#/components/parameters/To" }
        ],
        "responses": {
          "200": {
            "description": "The requested measurement values",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementValuesAsJSON"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/SchemaValidationFailed"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProblemDetail": {
        "$ref": "https://raw.githubusercontent.com/UdSAES/designetz_schemata/dev/schemata/problem-detail/schema_v0.1.0_oas2.json#/ProblemDetail"
      },
      "LatitudeLongitudePair": {
        "description": "Location on earth as latitude/longitude-pair in [decimal degrees](https://en.wikipedia.org/wiki/Decimal_degrees)",
        "type": "string",
        "pattern": "^\\d{1,2}.\\d{1,8}\/\\d{1,2}.\\d{1,8}$",
        "example": "54.1663/7.451"
      },
      "ListOfWeatherStationsAsJSON": {
        "description": "List of weather stations serialized as JSON",
        "type": "array",
        "items": {
          "type": "object",
          "required": [
            "name",
            "url"
          ],
          "properties": {
            "name": {
              "type": "string",
              "description": "The human-readable name of the station"
            },
            "url": {
              "type": "string",
              "format": "uri",
              "description": "The full URL of the resource describing a specific weather station"
            },
            "distance": {
              "type": "number",
              "format": "float",
              "description": "The distance to the specified coordinates in kilometres"
            }
          }
        }
      },
      "ListOfWeatherStationsAsCSV": {
        "description": "List of weather stations serialized as CSV",
        "externalDocs": {
          "description": "CSV Schema or Table Schema specifying the `text/csv`-representation of this resource",
          "url": "tbd"
        }
      },
      "StationId": {
        "type": "string",
        "description": "The identifier of the station used by DWD",
        "pattern": "^[A-Z\\d]{4,5}$",
        "example": "10708"
      },
      "WeatherStationAsJSON": {
        "type": "object",
        "required": [
          "name",
          "location",
          "stationId"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The human-readable name of the station"
          },
          "location": {
            "$ref": "https://raw.githubusercontent.com/UdSAES/designetz_schemata/dev/schemata/location/schema_v0.1.0_oas2.json#/Location"
          },
          "stationId": {
            "$ref": "#/components/schemas/StationId"
          },
          "measuredValues": {
            "type": "string",
            "format": "uri",
            "description": "A resource exposing climate data measured at this station",
            "example": "http://example.com/weather-stations/10708/measured-values"
          },
          "forecast": {
            "type": "string",
            "format": "uri",
            "description": "A resource exposing weather forecasts for this station's location",
            "example": "http://example.com/weather-stations/10708/forecast"
          }
        }
      },
      "WeatherStationAsCSV": {
        "description": "Information about a single weather stations serialized as CSV",
        "externalDocs": {
          "description": "CSV Schema or Table Schema specifying the `text/csv`-representation of this resource",
          "url": "tbd"
        }
      },
      "QuantitiesOfInterest": {
        "type": "string",
        "description": "A comma-separated list of quantity identifiers",
        "pattern": "^([a-z_1-9]+,?)+$",
        "default": "t_2m"
      },
      "Timestamp": {
        "type": "integer",
        "format": "int64",
        "minimum": 0,
        "description": "A timestamp as [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time) in milliseconds",
        "example": 1595502578837
      },
      "MeasurementValuesAsJSON": {
        "type": "object",
        "required": [
          "data"
        ],
        "properties": {
          "description": {
            "type": "string",
            "example": "Quantities t_2m, pmsl measured at station 10704"
          },
          "data": {
            "type": "array",
            "items": {
              "allOf": [
                { "required": [ "label" ]},
                { "$ref": "https://raw.githubusercontent.com/UdSAES/designetz_schemata/dev/schemata/timeseries/schema_v1.3.0-oas2.json#/Timeseries" }
              ]
            }
          }
        }
      }
    },
    "responses": {
      "SchemaValidationFailed": {
        "description": "The response for requests that were dropped because they were syntactically invalid and failed schema validation",
        "content": {
          "application/problem+json": {
            "schema": {
              "allOf": [
                { "$ref": "#/components/schemas/ProblemDetail" },
                { "required": [ "title", "status" ] }
              ]
            },
            "examples": {
              "application/problem+json": {
                "summary": "...",
                "value": {
                  "title": "Schema Validation Failed",
                  "status": 400,
                  "detail": "Request validation failed: ..."
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "StationId": {
        "name": "stationId",
        "in": "path",
        "required": true,
        "schema": { "$ref": "#/components/schemas/StationId" },
      },
      "Quantities": {
        "name": "quantities",
        "in": "query",
        "schema": { "$ref": "#/components/schemas/QuantitiesOfInterest" },
        "example": "aswdir_s,aswdifd_s"
      },
      "From": {
        "name": "from",
        "in": "query",
        "description": "Start of period as inclusive [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time) in milliseconds; defaults to the start of today (in timezone 'Europe/Berlin')",
        "schema": { "$ref": "#/components/schemas/Timestamp" }
      },
      "To": {
        "name": "to",
        "in": "query",
        "description": "End of period as inclusive [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time) in milliseconds; defaults to the end of today (in timezone 'Europe/Berlin')",
        "schema": { "$ref": "#/components/schemas/Timestamp" }
      }
    }
  },
  "tags": [ {
    "name": "Weather Stations",
    "description": "All resources relating to specific weather stations."
  } ]
}
